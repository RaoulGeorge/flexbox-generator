{"version":3,"sources":["components/options/index.js","components/action/index.js","constants/actions-constants.js","components/actions/index.js","components/control-panel/index.js","utils/index.js","components/css-output/index.js","containers/left/index.js","containers/right/index.js","containers/flexbox-generator/index.js","App.js","serviceWorker.js","index.js"],"names":["OptionsContainer","styled","div","_templateObject","withStyles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","inputLabel","selectEmpty","marginTop","_ref","options","property","selected","onChange","classes","_useState","useState","_useState2","Object","slicedToArray","val","setVal","react_default","a","createElement","FormControl_default","className","InputLabel_default","Select_default","e","value","target","map","option","MenuItem_default","key","ActionWrapper","action_templateObject","Action","values","selectedAction","setSelectedAction","components_options","ACTIONS","ActionsWrapper","actions_templateObject","Actions","actions","_ref2","components_action","defaultProps","ControlPanelWrapper","control_panel_templateObject","Title","h3","_templateObject2","ControlPanel","components_actions","stringifyCSS","cssProps","copiedCSS","keys","forEach","cssProp","concat","CSSOutputWrapper","css_output_templateObject","css_output_templateObject2","CSSOutputContent","_templateObject3","Copy","_templateObject4","CSSOutput","textarea","_templateObject5","CssOutput","domEl","useRef","css_output_Title","onClick","current","select","document","execCommand","index_es","icon","readOnly","ref","selectable","LeftContainer","left_templateObject","LeftContent","left_templateObject2","Left","control_panel","css_output","RightContainer","right_templateObject2","FlexParent","right_templateObject3","props","styles","css","right_templateObject","createDynamicStyles","FlexChild","right_templateObject4","Right","Container","flexbox_generator_templateObject","darkTheme","createMuiTheme","palette","type","typography","useNextVariants","initialState","intialState","i","length","getIntitialState","reducer","state","action","objectSpread","defineProperty","FlexboxGenerator","_useReducer","useReducer","_useReducer2","dispatch","core_styles","left","assign","right","AppWrapper","App_templateObject","App","library","add","faCopy","flexbox_generator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a12246a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nconst OptionsContainer = styled.div`\n  flex: 0 0 100%;\n`;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 200,\n  },\n  inputLabel: {\n    minWidth: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nconst Options = ({ options, property, selected, onChange, classes }) => {\n  const [val, setVal] = useState(selected);\n  const onSelectChange = e => {\n    const { value } = e.target;\n    setVal(value);\n    onChange(value);\n  };\n\n  return (\n    <OptionsContainer>\n      <FormControl className={classes.formControl}>\n        <InputLabel>{property}</InputLabel>\n        <Select onChange={onSelectChange} value={val}>\n          {options.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </OptionsContainer>\n  );\n};\n\nexport default withStyles(styles)(Options);\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Options from './../options';\n\nconst ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 200px;\n  margin: 5px 30px;\n`;\n\nconst Action = ({ property, values, selected, onChange }) => {\n  const [selectedAction, setSelectedAction] = useState();\n  const _onChange = val => {\n    onChange(property, val);\n  };\n  return (\n    <ActionWrapper>\n      <Options\n        selectedAction={selectedAction}\n        onChange={_onChange}\n        setSelectedAction={setSelectedAction}\n        options={values}\n        property={property}\n        selected={selected}\n      />\n    </ActionWrapper>\n  );\n};\n\nexport default Action;\n","export const ACTIONS = [\n  { property: 'flex-direction', options: ['row', 'row-reverse', 'column', 'column-reverse'], selected: 'row' },\n  { property: 'flex-wrap', options: ['nowrap', 'wrap', 'wrap-reverse'], selected: 'nowrap' },\n  {\n    property: 'justify-content',\n    options: ['flex-start', 'flex-end', 'center', 'space-between', 'space-around'],\n    selected: 'flex-start',\n  },\n  {\n    property: 'align-items',\n    options: ['stretch', 'flex-start', 'flex-end', 'center', 'baseline'],\n    selected: 'center',\n  },\n  {\n    property: 'align-content',\n    selected: 'flex-start',\n    options: ['stretch', 'flex-start', 'flex-end', 'center', 'space-between', 'space-around'],\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Action from './../action';\nimport { ACTIONS } from './../../constants/actions-constants';\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Actions = ({ actions, onChange }) => {\n  return (\n    <ActionsWrapper>\n      {actions.map(({ property, options, selected }) => (\n        <Action key={property} property={property} values={options} onChange={onChange} selected={selected} />\n      ))}\n    </ActionsWrapper>\n  );\n};\n\nActions.defaultProps = {\n  actions: ACTIONS,\n};\n\nActions.propTypes = {\n  actions: PropTypes.array,\n};\n\nexport default Actions;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Actions from './../actions';\n\nconst ControlPanelWrapper = styled.div``;\nconst Title = styled.h3``;\n\nconst ControlPanel = ({ onChange }) => {\n  return (\n    <ControlPanelWrapper>\n      <Title>Parent Flex Properties</Title>\n      <Actions onChange={onChange} />\n    </ControlPanelWrapper>\n  );\n};\n\nexport default ControlPanel;\n","// hydrates the initial state based on the constants set\nexport const getIntitialState = actions => {\n  const intialState = {};\n  for (let i = 0; i < actions.length; i++) {\n    intialState[actions[i].property] = actions[i].selected;\n  }\n  return intialState;\n};\n\n// converts the cssProps object into a printable css string.\nexport const stringifyCSS = cssProps => {\n  let copiedCSS = '';\n  Object.keys(cssProps).forEach(cssProp => {\n    copiedCSS += `${cssProp}: ${cssProps[cssProp]};\\n`;\n  });\n  return copiedCSS;\n};\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { stringifyCSS } from './../../utils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst CSSOutputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h3``;\n\nconst CSSOutputContent = styled.div`\n  border: 1px solid white;\n  margin: 10px;\n  text-align: left;\n  padding: 50px 20px;\n  position: relative;\n`;\n\nconst Copy = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n`;\n\nconst CSSOutput = styled.textarea`\n  height: 120px;\n  width: 200px;\n  background: black;\n  color: white;\n  font-size: 16px;\n  border: none;\n`;\n\nconst CssOutput = ({ cssProps }) => {\n  const domEl = useRef(null);\n\n  const onClicked = () => {\n    domEl.current.select();\n    document.execCommand('copy');\n  };\n\n  return (\n    <CSSOutputWrapper>\n      <Title>CSS Output</Title>\n      <CSSOutputContent>\n        <Copy\n          onClick={() => {\n            onClicked();\n          }}\n        >\n          <FontAwesomeIcon icon=\"copy\" />\n        </Copy>\n        <CSSOutput readOnly ref={domEl} selectable value={stringifyCSS(cssProps)} />\n      </CSSOutputContent>\n    </CSSOutputWrapper>\n  );\n};\n\nexport default CssOutput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport ControlPanel from './../../components/control-panel';\nimport CssOutput from './../../components/css-output';\nconst LeftContainer = styled.div`\n  flex: 1;\n  border-right: 1px solid black;\n  width: 100%;\n  min-height: 100vh;\n  background-color: black;\n  color: white;\n`;\n\nconst LeftContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n`;\nconst Left = ({ onChange, cssProps }) => {\n  return (\n    <LeftContainer>\n      <LeftContent>\n        <ControlPanel onChange={onChange} />\n        <CssOutput cssProps={cssProps} />\n      </LeftContent>\n    </LeftContainer>\n  );\n};\n\nexport default Left;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst createDynamicStyles = cssProps => {\n  let styles = '';\n  Object.keys(cssProps).forEach(key => {\n    styles += `${key}: ${cssProps[key]};\n `;\n  });\n  return css`\n    ${styles}\n  `;\n};\n\nconst RightContainer = styled.div`\n  flex: 1;\n  border-right: 1px solid black;\n  width: 100%;\n  min-height: 90vh;\n  padding: 40px;\n`;\n\nconst FlexParent = styled.div`\n  border: 4px solid grey;\n  min-height: 90vh;\n  display: flex;\n  margin: 10px;\n  ${props => createDynamicStyles(props.cssProps)}\n`;\n\nconst FlexChild = styled.div`\n  border: 3px solid purple;\n  background: purple;\n  border-radius: 3px;\n  flex: 1;\n  margin: 10px;\n  font-size: 24px;\n  color: white;\n`;\n\nconst Right = ({ cssProps }) => {\n  return (\n    <RightContainer>\n      <FlexParent cssProps={cssProps}>\n        <FlexChild>1</FlexChild>\n        <FlexChild>2</FlexChild>\n        <FlexChild>3</FlexChild>\n        <FlexChild>4</FlexChild>\n      </FlexParent>\n    </RightContainer>\n  );\n};\n\nexport default Right;\n","import React, { useReducer } from 'react';\nimport Left from '../left/index';\nimport Right from '../right/index';\nimport { getIntitialState } from './../../utils';\nimport { ACTIONS } from '../../constants/actions-constants';\nimport styled from 'styled-components';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  min-height: 100vh;\n`;\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark', // Switching the dark mode on is a single property value change.\n  },\n  typography: { useNextVariants: true },\n});\n\nconst initialState = { cssProps: getIntitialState(ACTIONS) };\n\nconst reducer = (state, action) => {\n  return { ...state, cssProps: { ...state.cssProps, [action.property]: action.value } };\n};\n\nconst FlexboxGenerator = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const _onChange = (property, value) => {\n    dispatch({ property, value });\n  };\n  return (\n    <Container>\n      <MuiThemeProvider theme={darkTheme}>\n        <Left onChange={_onChange} {...state} />\n      </MuiThemeProvider>\n\n      <Right {...state} />\n    </Container>\n  );\n};\n\nexport default FlexboxGenerator;\n","import React from 'react';\nimport FlexboxGenerator from './containers/flexbox-generator/index';\nimport styled from 'styled-components';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n\nconst AppWrapper = styled.div`\n  text-align: center;\n  min-height: 100vh;\n`;\n\nconst App = () => {\n  library.add(faCopy);\n\n  return (\n    <AppWrapper>\n      <FlexboxGenerator />\n    </AppWrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}