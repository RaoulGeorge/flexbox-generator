{"ast":null,"code":"import _slicedToArray from \"/Users/raoulgeorge/Development/src/personal/flexbox-generator/flexbox-generator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nexport var useCopy = function useCopy(text) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      copySuccess = _useState2[0],\n      setCopySuccess = _useState2[1];\n\n  var copyToClipboard = function copyToClipboard(text) {\n    debugger;\n    navigator.clipboard.writeText(text).then(function () {\n      setCopySuccess('Copied!');\n    }, function () {\n      /* clipboard write failed */\n    });\n  };\n\n  useEffect(function () {\n    (function () {\n      debugger;\n      copyToClipboard(text);\n    })();\n  }, [text]);\n  return {\n    copySuccess: copySuccess,\n    setCopySuccess: setCopySuccess\n  };\n};","map":{"version":3,"sources":["/Users/raoulgeorge/Development/src/personal/flexbox-generator/flexbox-generator/src/utils/copy.js"],"names":["React","useState","useCopy","text","copySuccess","setCopySuccess","copyToClipboard","navigator","clipboard","writeText","then","useEffect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AAAA,kBACSF,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACtBG,WADsB;AAAA,MACTC,cADS;;AAG7B,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,IAAI,EAAI;AAC9B;AACAI,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BN,IAA9B,EAAoCO,IAApC,CACE,YAAW;AACTL,MAAAA,cAAc,CAAC,SAAD,CAAd;AACD,KAHH,EAIE,YAAW;AACT;AACD,KANH;AAQD,GAVD;;AAYAM,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC,YAAM;AACL;AACAL,MAAAA,eAAe,CAACH,IAAD,CAAf;AACD,KAHD;AAID,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;AAOA,SAAO;AAAEC,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,cAAc,EAAdA;AAAf,GAAP;AACD,CAvBM","sourcesContent":["import React, { useState } from 'react';\n\nexport const useCopy = text => {\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const copyToClipboard = text => {\n    debugger;\n    navigator.clipboard.writeText(text).then(\n      function() {\n        setCopySuccess('Copied!');\n      },\n      function() {\n        /* clipboard write failed */\n      },\n    );\n  };\n\n  useEffect(() => {\n    (() => {\n      debugger;\n      copyToClipboard(text);\n    })();\n  }, [text]);\n\n  return { copySuccess, setCopySuccess };\n};\n"]},"metadata":{},"sourceType":"module"}